#!/usr/bin/env bash
#--------------------------------------------
# Default Bash Script Header
set -Eeuo pipefail
trap stacktrace EXIT ERR
function stacktrace {
	if [ $? != 0 ]; then
		echo -e "\nThe command '$BASH_COMMAND' triggerd a stacktrace:"
		for i in $(seq 1 $((${#FUNCNAME[@]} - 2))); do j=$(($i+1)); echo -e "\t${BASH_SOURCE[$i]}: ${FUNCNAME[$i]}() called in ${BASH_SOURCE[$j]}:${BASH_LINENO[$i]}"; done
	fi
}
#--------------------------------------------

##  Check for Dependencies
if ! which sha1sum >/dev/null 2>&1 ; then
	echo -e "Please install sha1sum (coreutils)\n"
	trap '' EXIT
	exit 1
fi

# build time variables
prefix="@prefix@"
pkgdatadir="@datarootdir@/@PACKAGE@"
config="@PACKAGE@.conf"
sysconfig="@sysconfdir@/$config"
userconfig=${XDG_CONFIG_HOME:=~/.config}/"$config"
XDG_DATA_HOME=${XDG_DATA_HOME:=~/.local/share}

. "$pkgdatadir/scripts/lib.sh"

# setup
if ! [ -f "$userconfig" ]; then
	setup "$pkgdatadir" "$sysconfig" "$userconfig"
fi

# load config values
directory="$(loadConfigValueEvaluated "directory" "$XDG_DATA_HOME/witfocus" "$sysconfig" "$userconfig")"
newFileTemplate="$(loadConfigValueEvaluated "new-file-template" "$pkgdatadir/templates/newFile.md" "$sysconfig" "$userconfig")"
taskTemplate="$(loadConfigValueEvaluated "task-template" "$pkgdatadir/templates/task.md" "$sysconfig" "$userconfig")"
fullTaskTemplate="$(loadConfigValueEvaluated "full-task-template" "$pkgdatadir/templates/fullTask.md" "$sysconfig" "$userconfig")"
format="$(loadConfigValue "name-format" "%Y-%m-%d" "$sysconfig" "$userconfig")"
formatMatchRegex="$(loadConfigValue "name-match-regex" "[0-9]{4}-[0-9]{2}-[0-9]{2}" "$sysconfig" "$userconfig")"
cycle="$(loadConfigValue "cycle-duration" "$((60*60*24))" "$sysconfig" "$userconfig")"
cycleBlacklist="$(loadConfigValue "cycle-blacklist" "" "$sysconfig" "$userconfig")"
cycleBlacklistFormat="$(loadConfigValue "cycle-blacklist-format" "" "$sysconfig" "$userconfig")"
secondaryName="$(loadConfigValue "default-secondary-file" "current" "$sysconfig" "$userconfig")"
action="$(loadConfigValue "default-action" "current" "$sysconfig" "$userconfig")"

# CLI paramters
if [ $# -gt 0 ]; then
	action="$1"
fi
forced="false"
allOpen="false"
if [ $# -gt 1 ]; then
	if [ "${2:-}" == "-f" ]; then
		forced="true"
	elif [ "${2:-}" == "-a" ]; then
		allOpen="true"
	fi
fi

# other variables
template="$pkgdatadir/templates/task.md"
now=$(date +%s)
primary="$directory/$(nameToFilename "$action" "$now" "$forced" "$cycleBlacklist" "$cycleBlacklistFormat")"
secondary="$directory/$(nameToFilename "$secondaryName" "$now" "$forced" "$cycleBlacklist" "$cycleBlacklistFormat")"

if [ "$action" == "open" ]; then
	# sort only by the first column (seperated by space)
	if [ -d "$directory" ]; then
		if [ "$allOpen" == "true" ]; then
			# echo "Skipping date check" >/dev/stderr
			formatMatchRegex=""
		fi
		openAction "$directory" "$formatMatchRegex"
	fi
	exit 0
elif ! [ -f "$primary" ] \
	&& [ "$forced" != "true" ] \
	&& [ "$action" != "last" ] \
	&& [ "$action" != "current" ] \
	&& [ "$action" != "next" ] \
	&& [ "$action" != "backlog" ]; then
	usage "$0" "$action"
	exit 0
fi

mkdir -p "$directory" # we don't create it until we need it

primaryCycle="$(basename "$primary" | sed 's/\.[^.]\+$//g')"
secondaryCycle="$(basename "$secondary" | sed 's/\.[^.]\+$//g')"
instructions="type ',task' to add more tasks"
primaryTemplateHash="$(createFileFromTemplate "$primary" "$primaryCycle" "$instructions" "$newFileTemplate" "$taskTemplate" "$fullTaskTemplate")"
secondaryTemplateHash="$(createFileFromTemplate "$secondary" "$secondaryCycle" "$instructions" "$newFileTemplate" "$taskTemplate" "$fullTaskTemplate")"

if [ "$primary" == "$secondary" ]; then
	vim "$primary"
else
	vim -O "$primary" "$secondary"
fi

removeUnused "$primary" "$primaryTemplateHash"
if [ "$primary" != "$secondary" ]; then
	removeUnused "$secondary" "$secondaryTemplateHash"
fi

